@import '../../../../scss/variables.scss';

.root {
  display: flex;
  flex-direction: column;

  .group {
    display: flex;
    flex-direction: column;

    &:not(:last-of-type) {
      margin-bottom: 50px;
    }

    &__heading {
      display: flex;
      flex-direction: row;
      align-items: center;

      line-height: 1;
      font-size: 16px;
      font-weight: 600;

      margin-bottom: 15px;

      svg {
        margin-right: 10px;
      }
    }

    .boards {
      display: grid;
      grid-gap: 15px;
      grid-template-columns: repeat(6, 1fr);

      width: 100%;
      min-height: 100px;

      @media screen and (max-width: map-get($SCREENS, 'xxl')) {
        grid-template-columns: repeat(5, 1fr);
      }

      @media screen and (max-width: map-get($SCREENS, 'xl')) {
        grid-template-columns: repeat(4, 1fr);
      }

      @media screen and (max-width: 1100px) {
        grid-template-columns: repeat(3, 1fr);
      }

      @media screen and (max-width: map-get($SCREENS, 'sm')) {
        grid-template-columns: repeat(2, 1fr);
      }

      @media screen and (max-width: map-get($SCREENS, 'xs')) {
        grid-template-columns: repeat(1, 1fr);
      }
    }

    .add {
      width: 200px;
      height: 100px;

      cursor: pointer;

      display: flex;
      align-items: center;
      flex-direction: column;
      justify-content: center;

      font-size: 14px;
      font-weight: 600;
      text-transform: uppercase;

      border-width: 2px;
      border-style: solid;
      border-radius: 10px;
      border-color: map-get($COLORS, 'dark');

      background-color: transparent;
      color: map-get($COLORS, 'dark');

      transition-duration: .3s;
      transition-property: color, border-color;

      &:hover {
        color: map-get($COLORS, 'info');
        border-color: map-get($COLORS, 'info');

        svg {
          transform: rotate(360deg);
        }
      }

      svg {
        width: 30px;
        height: 30px;

        margin-bottom: 10px;

        transition-duration: .5s;
        transition-property: transform;
      }

      span {
        user-select: none;
      }
    }
  }
}

